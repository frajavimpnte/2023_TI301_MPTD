/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tools;

import java.awt.Color;
import java.awt.Graphics2D;

/**
 *
 * @author TICS03
 */
public class Restriction extends javax.swing.JFrame {

    /**
     * Creates new form Axis2D
     */
    public Restriction() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrConstraint = new javax.swing.ButtonGroup();
        pnlDraw = new javax.swing.JPanel();
        lbA1 = new javax.swing.JLabel();
        tfA1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lbA2 = new javax.swing.JLabel();
        tfA2 = new javax.swing.JTextField();
        lbB1 = new javax.swing.JLabel();
        tfB1 = new javax.swing.JTextField();
        rbLeast = new javax.swing.JRadioButton();
        rbEqual = new javax.swing.JRadioButton();
        rbGreater = new javax.swing.JRadioButton();
        lbAdd = new javax.swing.JLabel();
        btDraw = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(640, 480));
        setPreferredSize(new java.awt.Dimension(640, 480));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlDrawMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlDrawLayout = new javax.swing.GroupLayout(pnlDraw);
        pnlDraw.setLayout(pnlDrawLayout);
        pnlDrawLayout.setHorizontalGroup(
            pnlDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        pnlDrawLayout.setVerticalGroup(
            pnlDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(pnlDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 300, 300));

        lbA1.setText("a1");
        getContentPane().add(lbA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 20, 20));

        tfA1.setText("1");
        tfA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfA1ActionPerformed(evt);
            }
        });
        getContentPane().add(tfA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 30, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        lbA2.setText("a2");
        getContentPane().add(lbA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 20, -1));

        tfA2.setText("1");
        tfA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfA2ActionPerformed(evt);
            }
        });
        getContentPane().add(tfA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 30, -1));

        lbB1.setText("b1");
        getContentPane().add(lbB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        tfB1.setText("10");
        tfB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfB1ActionPerformed(evt);
            }
        });
        getContentPane().add(tfB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 30, -1));

        bgrConstraint.add(rbLeast);
        rbLeast.setText("<");
        getContentPane().add(rbLeast, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, -1, -1));

        bgrConstraint.add(rbEqual);
        rbEqual.setText("=");
        rbEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEqualActionPerformed(evt);
            }
        });
        getContentPane().add(rbEqual, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        bgrConstraint.add(rbGreater);
        rbGreater.setText(">");
        getContentPane().add(rbGreater, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, -1));

        lbAdd.setText("+");
        getContentPane().add(lbAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 20, -1));

        btDraw.setText("Draw");
        btDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDrawActionPerformed(evt);
            }
        });
        getContentPane().add(btDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, -1, -1));

        setBounds(0, 0, 662, 412);
    }// </editor-fold>//GEN-END:initComponents

    
    private void drawPlot() {
        Graphics2D g =  (Graphics2D) pnlDraw.getGraphics();
        g.setColor(Color.white);
        g.fillRect(0,0, 640, 480);
        
        // get values
        float a1 = (float)Double.parseDouble( tfA1.getText() );
        float a2 = (float)Double.parseDouble( tfA2.getText() );
        float b1 = (float)Double.parseDouble( tfB1.getText() );

        // axis intercepsiones, wordl coordinates
        float x1I = b1/a1;
        float x2I = b1/a2;

        // screen coordinates, line & region. 
        // fill poligon, three points & draw line
        int rx1[] = new int[5];
        int rx2[] = new int[5];

        // region screen coordinates <= ////////////////////////
        rx1[0] = Coordinates.toScreenX1(0.01f);
        rx2[0] = Coordinates.toScreenX2(x2I);

        rx1[1] = Coordinates.toScreenX1(x1I);
        rx2[1] = Coordinates.toScreenX2(0.0f);

        rx1[2] = Coordinates.toScreenX1(0.0f);
        rx2[2] = Coordinates.toScreenX2(0.0f);

        // draw region 
        g.setColor(new Color(1,0,0,0.5f));
        g.fillPolygon(rx1, rx2, 3);
        
        // region screen coordinates >= ////////////////////////
        rx1[2] = Coordinates.toScreenX1(20.0f);
        rx2[2] = Coordinates.toScreenX2(0.0f);
                
        rx1[3] = Coordinates.toScreenX1(20.0f);
        rx2[3] = Coordinates.toScreenX2(20.0f);
        
        rx1[4] = Coordinates.toScreenX1(0.0f);
        rx2[4] = Coordinates.toScreenX2(20.0f);

        // draw region green
        g.setColor(new Color(0,0,1,0.5f));
        g.fillPolygon(rx1, rx2, 5);
        
        // draw something
       
        // draw line black
        g.setColor(Color.black);
        g.drawLine(                
          rx1[0], rx2[0],
          rx1[1], rx2[1] 
        );
        
         //draw axis
        g.setColor(Color.black);
        // x-y axis
        g.drawLine(
                Coordinates.toScreenX1(0.0f),
                Coordinates.toScreenX2(0.01f),
                Coordinates.toScreenX1(20.0f),
                Coordinates.toScreenX2(0.01f)
                );
         g.drawLine(
                Coordinates.toScreenX1(0.01f),
                Coordinates.toScreenX2(0.0f),
                Coordinates.toScreenX1(0.01f),
                Coordinates.toScreenX2(20.0f)
                );
         
        // draw xy ticks
        for (float dx = 0.0f; dx <= 20.0f; dx +=1.0f ) {
            // x-ticx
            g.drawLine(
                Coordinates.toScreenX1(dx),
                Coordinates.toScreenX2(0.01f),
                Coordinates.toScreenX1(dx),
                Coordinates.toScreenX2(1.0f));
        }        
        for (float dy = 0.0f; dy <= 20.0f; dy +=1.0f ) {
            // x-ticx
            g.drawLine(
                Coordinates.toScreenX1(0.0f),
                Coordinates.toScreenX2(dy),
                Coordinates.toScreenX1(1.0f),
                Coordinates.toScreenX2(dy));
        }
           
            
    }    
    private void pnlDrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDrawMouseClicked
        // TODO add your handling code here:
        drawPlot();
        
    }//GEN-LAST:event_pnlDrawMouseClicked

    private void tfA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfA1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfA1ActionPerformed

    private void tfA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfA2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfA2ActionPerformed

    private void rbEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEqualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbEqualActionPerformed

    private void tfB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfB1ActionPerformed

    private void btDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDrawActionPerformed
        // TODO add your handling code here:
        drawPlot();
    }//GEN-LAST:event_btDrawActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Restriction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Restriction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Restriction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Restriction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Restriction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrConstraint;
    private javax.swing.JButton btDraw;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbA1;
    private javax.swing.JLabel lbA2;
    private javax.swing.JLabel lbAdd;
    private javax.swing.JLabel lbB1;
    private javax.swing.JPanel pnlDraw;
    private javax.swing.JRadioButton rbEqual;
    private javax.swing.JRadioButton rbGreater;
    private javax.swing.JRadioButton rbLeast;
    private javax.swing.JTextField tfA1;
    private javax.swing.JTextField tfA2;
    private javax.swing.JTextField tfB1;
    // End of variables declaration//GEN-END:variables
}
