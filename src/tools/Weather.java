/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tools;

/**
 *
 * @author TICS03
 */

import java.awt.Graphics2D;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellEditor;

public class Weather extends javax.swing.JFrame {
    int[] temp = new int[7];
    int[] rain = new int[7];
    /**
     * Creates new form Weather
     */
    public Weather() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWeatherData = new javax.swing.JTable();
        btnPlotGraph = new javax.swing.JButton();
        pnlGraph = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblWeatherData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Monday", null,  new Integer(0)},
                {"Tuesday", null,  new Integer(0)},
                {"Wednesday", null,  new Integer(0)},
                {"Thursday", null,  new Integer(0)},
                {"Friday", null,  new Integer(0)},
                {"Saturday", null,  new Integer(0)},
                {"Sunday", null,  new Integer(0)}
            },
            new String [] {
                "Day", "Temperature", "Rainfall"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblWeatherData.setShowGrid(true);
        jScrollPane1.setViewportView(tblWeatherData);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 500, 180));

        btnPlotGraph.setText("Plot graph");
        btnPlotGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlotGraphActionPerformed(evt);
            }
        });
        getContentPane().add(btnPlotGraph, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, -1, -1));
        getContentPane().add(pnlGraph, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 790, 490));

        setBounds(0, 0, 856, 737);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlotGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlotGraphActionPerformed
        // TODO add your handling code here:
        TableCellEditor editor = tblWeatherData.getCellEditor();
        if (editor != null) {
            editor.stopCellEditing();
        }
        try
        {
            for (int i=0;i<7; i++) {
                temp[i]= (Integer) tblWeatherData.getModel().getValueAt(i,1);
                rain[i]= (Integer) tblWeatherData.getModel().getValueAt(i,2);
            }
            Graphics2D g=(Graphics2D) pnlGraph.getGraphics();
            Font sanSerifFont = new Font("SanSerif", Font.PLAIN, 14);
            
            g.setFont(sanSerifFont);
            g.setColor(Color.white);
            g.fillRect(0,20,770,480);
            g.setColor(Color.black);
            g.drawRect(0,20,770,480);
                       
            // plot bar
            g.drawLine(100,100,100,400);
            g.drawLine(100,400,660,400);
            g.drawLine(660,400,660,100);
            String day="";
            for (int x=0; x<=6;x++) {
                g.drawLine(100+80*x,400,100+80*x,410);
                switch(x) {
                    case 0: day="Mon"; break;
                    case 1: day="Tue"; break;
                    case 2: day="Wed"; break;
                    case 3: day="Thur"; break;
                    case 4: day="Fri"; break;
                    case 5: day="Sat"; break;
                    case 6: day="Sun"; break;
                }
                g.drawString(day,130+80*x,428);
            }
            
            // x axis labels
            String caption="";
            for (int y=0; y<=6;y++) {
                g.drawLine(100,400-50*y,90,400-50*y);
                caption = Integer.toString(y*5-5);
                g.drawString(caption,66, 406-50*y);
            }
            // y axis labels
            g.drawString("deg.C",10,224);
            
            
            // colors, plot for bars
            int red=0x66;
            int green=0xCC;
            int blue=0xFF;
            Color lightBlue = new Color(red,green,blue);
            
            for (int i=0;i<=6; i++) {
                g.setColor(lightBlue);
                g.fillRect(115 + 80*i, 400-10*rain[i], 50, 10*rain[i]);
                g.setColor(Color.black);
                g.drawRect(115 + 80*i, 400-10*rain[i], 50, 10*rain[i]);
            }
            
            //plot lines
            g.setColor(Color.red);
            for (int i=1;i<=6; i++) {
                g.drawLine(140+80*(i-1),350-10*temp[i-1],140+80*i,350-10*temp[i]);
            }
        } catch(NullPointerException e) {
            JOptionPane.showMessageDialog(Weather.this, "Not all temperatures entered");
        }
    }//GEN-LAST:event_btnPlotGraphActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Weather.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Weather.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Weather.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Weather.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Weather().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPlotGraph;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlGraph;
    private javax.swing.JTable tblWeatherData;
    // End of variables declaration//GEN-END:variables
}
